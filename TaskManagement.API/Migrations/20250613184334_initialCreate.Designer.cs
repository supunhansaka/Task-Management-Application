// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskManagement.API.Data;

#nullable disable

namespace TaskManagement.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250613184334_initialCreate")]
    partial class initialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TaskManagement.API.Models.TaskItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 6, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Setup project to code.",
                            IsCompleted = false,
                            Title = "Prepare project structure"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 6, 2, 9, 30, 0, 0, DateTimeKind.Utc),
                            Description = "Add business logic for Tasks.",
                            IsCompleted = false,
                            Title = "Implement TaskService"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 6, 3, 15, 45, 0, 0, DateTimeKind.Utc),
                            Description = "Add data seeding for Tasks and Users.",
                            IsCompleted = true,
                            Title = "Seed initial data"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 6, 4, 10, 15, 0, 0, DateTimeKind.Utc),
                            Description = "Implement simple username/password authentication with cookies.",
                            IsCompleted = true,
                            Title = "Implement Authentication"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 6, 5, 14, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Develop login form with validation and SCSS styling.",
                            IsCompleted = false,
                            Title = "Create Login Page UI"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 6, 6, 16, 20, 0, 0, DateTimeKind.Utc),
                            Description = "Implement sorting of tasks by title.",
                            IsCompleted = false,
                            Title = "Add task list sorting"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 6, 7, 11, 5, 0, 0, DateTimeKind.Utc),
                            Description = "Implement search/filtering for task list.",
                            IsCompleted = true,
                            Title = "Add task filtering"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 6, 8, 13, 50, 0, 0, DateTimeKind.Utc),
                            Description = "Display task list and task form side by side.",
                            IsCompleted = false,
                            Title = "Build Dashboard Page"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 6, 9, 17, 40, 0, 0, DateTimeKind.Utc),
                            Description = "Make Dashboard responsive for mobile devices.",
                            IsCompleted = false,
                            Title = "Style Dashboard for Mobile"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 6, 10, 9, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Test all user flows and fix any bugs.",
                            IsCompleted = false,
                            Title = "Test Full Application"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 6, 11, 12, 30, 0, 0, DateTimeKind.Utc),
                            Description = "Allow user to logout and clear session.",
                            IsCompleted = true,
                            Title = "Implement Logout Functionality"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2024, 6, 12, 15, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Add validation messages to forms.",
                            IsCompleted = false,
                            Title = "Improve Form Validation"
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2024, 6, 13, 10, 45, 0, 0, DateTimeKind.Utc),
                            Description = "Reduce API call overhead and improve performance.",
                            IsCompleted = false,
                            Title = "Optimize API Calls"
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2024, 6, 14, 11, 10, 0, 0, DateTimeKind.Utc),
                            Description = "Show toast messages for success and errors.",
                            IsCompleted = true,
                            Title = "Add Toast Notifications"
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2024, 6, 15, 9, 20, 0, 0, DateTimeKind.Utc),
                            Description = "Write basic unit tests for services.",
                            IsCompleted = false,
                            Title = "Write Unit Tests"
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2024, 6, 16, 14, 30, 0, 0, DateTimeKind.Utc),
                            Description = "Push code to GitHub and setup CI/CD.",
                            IsCompleted = true,
                            Title = "Setup GitHub Repository"
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2024, 6, 17, 16, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Configure deployment to test server.",
                            IsCompleted = false,
                            Title = "Configure Deployment"
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2024, 6, 18, 11, 30, 0, 0, DateTimeKind.Utc),
                            Description = "Perform code review and refactoring.",
                            IsCompleted = false,
                            Title = "Review Code"
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2024, 6, 19, 10, 10, 0, 0, DateTimeKind.Utc),
                            Description = "Document project setup and usage in README.",
                            IsCompleted = true,
                            Title = "Update README"
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2024, 6, 20, 13, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Prepare demo for project presentation.",
                            IsCompleted = false,
                            Title = "Prepare Project Demo"
                        });
                });

            modelBuilder.Entity("TaskManagement.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "password",
                            Username = "admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
